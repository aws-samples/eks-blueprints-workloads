apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: skiapp-ingress
  namespace: team-riker
  annotations:
    alb.ingress.kubernetes.io/group.name: riker
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    #alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    #alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=Riker
spec:
  ingressClassName: alb
  rules:
    - host: #skiapp.{{ .Values.spec.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: skiapp-service
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: skiapp-service
  namespace: team-riker
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app: skiapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: skiapp-deployment
  namespace: team-riker
spec:
  selector:
    matchLabels:
      app: skiapp
  replicas: 2 
  template: 
    metadata:
      labels:
        app: skiapp
    spec:
      containers:
      - name: skiapp
        image: sharepointoscar/skiapp:v2
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
              cpu: "250m"
          limits:
            memory: "128Mi"
